import numpy as np
from sklearn import linear_model
import matplotlib.pyplot as plt
import sklearn.metrics as sm
from sklearn.model_selection import train_test_split

#Input file
input_file = 'data_regr_4.txt'
data = np.loadtxt(input_file, delimiter=',')
X, y = data[:, :-1], data[:, -1]

#Data separation
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=13)

#Creating regressor
regressor = linear_model.LinearRegression()
regressor.fit(X_train, y_train)

#Prediction the result
y_test_pred = regressor.predict(X_test)

#Check mae and etc
print("\nLinear regression performance:")
print("Mean Absolute Error =",
round(sm.mean_absolute_error(y_test, y_test_pred), 2))
print("Mean Squared Error =",
round(sm.mean_squared_error(y_test, y_test_pred), 2))
print("Median Absolute Error =",
round(sm.median_absolute_error(y_test, y_test_pred), 2))
print("Explain Variance Score =",
round(sm.explained_variance_score(y_test, y_test_pred), 2))
print("R2 score =",
round(sm.r2_score(y_test, y_test_pred), 2))

plt.scatter(X_test, y_test, color='green')
plt.plot(X_test, y_test_pred, color='black', linewidth=2)
plt.show()