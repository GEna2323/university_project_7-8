import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
import sklearn.metrics as sm

#Load data
diabetes = datasets.load_diabetes()
X = diabetes.data
y = diabetes.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=13)

#Creating regressor
regressor = linear_model.LinearRegression()
regressor.fit(X_train, y_train)

#Make predictin
y_pred = regressor.predict(X_test)

#Check mae and etc
print("\nLinear regression performance:")
print("Regression coef =", regressor.coef_)
print("Regression intercept =", regressor.intercept_)
print("Mean Absolute Error =",
round(sm.mean_absolute_error(y_test, y_pred), 2))
print("Mean Squared Error =",
round(sm.mean_squared_error(y_test, y_pred), 2))
print("R2 score =",
round(sm.r2_score(y_test, y_pred), 2))

fig, ax = plt.subplots()
ax.scatter(y_test, y_pred, edgecolors=(0, 0, 0))
ax.plot([y.min(), y.max()], [y.min(), y.max()], 'k--', lw=3)
ax.set_xlabel('Original')
ax.set_ylabel('Predict')
plt.show()